@import "variables";
@import "functions";

@mixin respond-to($breakpoint) {
  @if $breakpoint == 'mobile' {
    @media (max-width: #{$mqMinWidth - 1px}) {
      @content;
    }
  }
  @if $breakpoint == 'tablet' {
    @media (min-width: #{$mqTablet}) {
      @content;
    }
  }
  @if $breakpoint == 'desktop' {
    @media (min-width: #{$mqDesktop}) {
      @content;
    }
  }
  @if $breakpoint == 'large' {
    @media (min-width: #{$mqLarge}) {
      @content;
    }
  }
}

@mixin button-style($bg-color: $uoc-corporate, $text-color: white, $hover-bg: null) {
  background-color: $bg-color;
  color: $text-color;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $radius-md;
  font-weight: 500;
  text-decoration: none;
  display: inline-block;
  transition: all 0.2s ease;
  cursor: pointer;
  
  @if $hover-bg {
    &:hover {
      background-color: $hover-bg;
    }
  } @else {
    &:hover {
      background-color: darken-color($bg-color, 10%);
    }
  }
  
  &:focus {
    outline: 2px solid alpha-color($bg-color, 0.5);
    outline-offset: 2px;
  }
}

@mixin card-style($padding: $spacing-md, $shadow: $shadow-md, $radius: $radius-lg) {
  background-color: white;
  padding: $padding;
  border-radius: $radius;
  box-shadow: $shadow;
  transition: box-shadow 0.2s ease, transform 0.2s ease;
  
  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin focus-style($color: $uoc-corporate) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
  
  &:focus:not(:focus-visible) {
    outline: none;
  }
}

@mixin container($max-width: $mqLarge, $padding: $spacing-md) {
  max-width: $max-width;
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
}

@mixin gradient-bg($color1, $color2, $direction: 45deg) {
  background: linear-gradient($direction, $color1, $color2);
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin grid-layout($columns: 1, $gap: $spacing-md, $tablet-columns: null, $desktop-columns: null) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
  
  @if $tablet-columns {
    @include respond-to('tablet') {
      grid-template-columns: repeat($tablet-columns, 1fr);
    }
  }
  
  @if $desktop-columns {
    @include respond-to('desktop') {
      grid-template-columns: repeat($desktop-columns, 1fr);
    }
  }
}